{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatID","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","onSubmit","className","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bfc9040.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const {chatID, creds} = props;\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const text = value.trim();\n        if(text.length > 0) sendMessage(creds, chatID, {text});\n        setValue('');\n    }\n    const handleUpload = (event) => {\n        sendMessage(creds, chatID, {files: event.target.files, text: ''})\n    }\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        isTyping(props, chatID)\n    }\n    return(\n        <form onSubmit={handleSubmit} className=\"message-form\">\n            <input\n                className=\"message-input\"\n                placeholder=\"Send a message ...\"\n                value = {value}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\"/>\n                </span>\n            </label>                \n            <input type=\"file\" multiple={false} id=\"upload-button\" style={{display: 'none'}} onChange={handleUpload} />\n            <button className=\"send-button\" type=\"submit\">\n                <SendOutlined className=\"send-icon\"/>\n            </button>\n        </form>\n    )\n}\nexport default MessageForm;","const MyMessage = ({message}) => {\n    if(message.attachments && message.attachments.length > 0){\n        return(\n            <img\n                src={message.attachments[0].file}\n                alt=\"message-attachment\"\n                className=\"message-image\"\n                style={{float:'right'}}\n            />\n        )\n    }\n    return(\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color:'white',backgroundColor:'#3B2A50'}}>\n            {message.text}\n        </div>\n    )\n}\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username != message.sender.username\n    \n    return(\n        <div className=\"message-row\">\n            {isFirstMessageByUser && (\n                <div\n                    className=\"message-avatar\"\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\n                />\n            )}\n            {message?.attachments?.length > 0\n                ?(\n                    <img\n                        src={message.attachments[0].file}\n                        alt=\"message-attachment\"\n                        className=\"message-image\"\n                        style={{marginLeft: isFirstMessageByUser ? '4px' : '48px'}}\n                    />\n                    ) : (\n                        <div className=\"message\" style={{float: 'left',backgroundColor:'#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\n                            {message.text}\n                         </div>\n                    )\n            }\n        </div>\n    )\n}\nexport default TheirMessage;","import MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nconst ChatFeed = (props) => {\n    const {chats, activeChat, userName, messages} = props;\n    const chat = chats && chats[activeChat];\n    const renderReadReceipts =(message, isMyMessage)=>{\n        chat.people.map((person,index)=> person.last_read === message.id && (\n            <div\n                key={`read_${index}`}\n                className=\"read-receipts\"\n                style={{float: isMyMessage ? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`}}\n            />\n        ))\n    }\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n        return keys.map((key ,index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index-1]\n            const isMyMessage = userName === message.sender.username\n\n            return(\n                <div key={'msg_${index}'} style={{width: '100%'}}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message} />\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>\n                </div>\n            )\n        })\n    }\n    if(!chat) return 'Loading...';\n    return(\n        <div className=\"chat-feed\">\n            <div className=\"chat-title-container\">\n                <div className=\"chat-title\">\n                    {chat ?. title}\n                </div>\n                <div className=\"chat-subtitle\">\n                    {chat.people.map((person) => `${person.person.username}`)}\n                </div>\n            </div>\n            {renderMessages()}\n            <div style={{height: '100px'}}/>\n            <div className=\"message-form-container\">\n                <MessageForm {...props} chatID={activeChat}/>\n            </div>\n        </div>\n    )\n}\nexport default ChatFeed;","import { useState } from \"react\";\nimport axios from \"axios\";\nconst LoginForm = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('')\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const authObject = {'Project-ID' : \"a2fff590-7ee8-4f29-9b7f-f53cec487682\", 'User-Name': username, 'User-Secret': password}\n        try {\n            await axios.get('https://api.chatengine.io/chats', {headers : authObject})\n            localStorage.setItem('username', username)\n            localStorage.setItem('password', username)\n            \n            window.location.reload();\n        } catch (error) {\n            setError('Incorrect password or username')\n        }\n    }\n    return(\n        <div className=\"wrapper\">\n            <div className=\"form\">\n                <h1 className=\"title\">Ruçketlock</h1>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n                    <div align=\"center\">\n                        <button className=\"button\" type=\"submit\">\n                            <span>Enter Ruçketlock!</span>\n                        </button>\n                    </div>\n                    <h2 className=\"error\">{error}</h2>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm\n","import './App.css';\nimport {ChatEngine} from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\nfunction App() {\n  \n  if(!localStorage.getItem('username')) return <LoginForm/>\n\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"a2fff590-7ee8-4f29-9b7f-f53cec487682\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {... chatAppProps} />}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}